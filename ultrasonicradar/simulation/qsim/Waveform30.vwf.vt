// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "08/26/2019 00:07:42"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          measure_ultrasonic_sensor_time_interval
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module measure_ultrasonic_sensor_time_interval_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
reg ECHO;
reg PING;
reg RESET;
// wires                                               
wire Digit0;
wire Digit1;
wire Digit2;
wire Digit3;
wire Digit4;
wire Digit5;
wire Digit6;
wire Digit7;
wire Digit8;
wire Digit9;
wire Digit10;
wire Digit11;
wire Digit12;
wire Digit13;
wire Digit14;
wire Digit15;
wire Digit16;
wire Digit17;
wire Digit18;
wire Digit19;

// assign statements (if any)                          
measure_ultrasonic_sensor_time_interval i1 (
// port map - connection between master ports and signals/registers   
	.CLK(CLK),
	.Digit0(Digit0),
	.Digit1(Digit1),
	.Digit2(Digit2),
	.Digit3(Digit3),
	.Digit4(Digit4),
	.Digit5(Digit5),
	.Digit6(Digit6),
	.Digit7(Digit7),
	.Digit8(Digit8),
	.Digit9(Digit9),
	.Digit10(Digit10),
	.Digit11(Digit11),
	.Digit12(Digit12),
	.Digit13(Digit13),
	.Digit14(Digit14),
	.Digit15(Digit15),
	.Digit16(Digit16),
	.Digit17(Digit17),
	.Digit18(Digit18),
	.Digit19(Digit19),
	.ECHO(ECHO),
	.PING(PING),
	.RESET(RESET)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #495 1'b1;
	#5;
end 

// ECHO
initial
begin
	ECHO = 1'b1;
	ECHO = #100000 1'b0;
	ECHO = #500000 1'b1;
	ECHO = #200000 1'b0;
	ECHO = #100000 1'b1;
end 

// PING
always
begin
	PING = 1'b0;
	PING = #9900 1'b1;
	#100;
end 

// RESET
initial
begin
	RESET = 1'b1;
end 
endmodule

