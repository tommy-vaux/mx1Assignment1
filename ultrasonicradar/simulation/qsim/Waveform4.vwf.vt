// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "08/13/2019 16:44:26"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Quad4to1Multiplexer
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Quad4to1Multiplexer_vlg_vec_tst();
// constants                                           
// general purpose registers
reg S0;
reg S1;
reg W0;
reg W1;
reg W2;
reg W3;
reg X0;
reg X1;
reg X2;
reg X3;
reg Y0;
reg Y1;
reg Y2;
reg Y3;
reg Z0;
reg Z1;
reg Z2;
reg Z3;
// wires                                               
wire W;
wire X;
wire Y;
wire Z;

// assign statements (if any)                          
Quad4to1Multiplexer i1 (
// port map - connection between master ports and signals/registers   
	.S0(S0),
	.S1(S1),
	.W(W),
	.W0(W0),
	.W1(W1),
	.W2(W2),
	.W3(W3),
	.X(X),
	.X0(X0),
	.X1(X1),
	.X2(X2),
	.X3(X3),
	.Y(Y),
	.Y0(Y0),
	.Y1(Y1),
	.Y2(Y2),
	.Y3(Y3),
	.Z(Z),
	.Z0(Z0),
	.Z1(Z1),
	.Z2(Z2),
	.Z3(Z3)
);
initial 
begin 
#1000000 $finish;
end 

// S0
initial
begin
	S0 = 1'b1;
end 

// S1
initial
begin
	S1 = 1'b0;
end 

// W0
initial
begin
	W0 = 1'b0;
end 

// W1
initial
begin
	W1 = 1'b0;
end 

// W2
initial
begin
	W2 = 1'b0;
end 

// W3
initial
begin
	W3 = 1'b0;
end 

// X0
initial
begin
	X0 = 1'b0;
end 

// X1
initial
begin
	X1 = 1'b0;
end 

// X2
initial
begin
	X2 = 1'b1;
end 

// X3
initial
begin
	X3 = 1'b1;
end 

// Y0
initial
begin
	Y0 = 1'b0;
end 

// Y1
initial
begin
	Y1 = 1'b1;
end 

// Y2
initial
begin
	Y2 = 1'b0;
end 

// Y3
initial
begin
	Y3 = 1'b0;
end 

// Z0
initial
begin
	Z0 = 1'b1;
end 

// Z1
initial
begin
	Z1 = 1'b1;
end 

// Z2
initial
begin
	Z2 = 1'b1;
end 

// Z3
initial
begin
	Z3 = 1'b1;
end 
endmodule

